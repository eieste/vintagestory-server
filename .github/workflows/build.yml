name: Publish DockerHub image

on:
  push:
    branches:
      - 'main'
    tags:
      - '*'
  pull_request:
    branches:
      - 'main'
  schedule:
    - cron: "0 0 */1 * *"

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Fetch Stable Version
        id: vsapi
        run: |
          echo "VS_VERSION=$(curl --silent http://api.vintagestory.at/lateststable.txt)" >> $GITHUB_ENV
          
      - name: "Check if Release already Exist"
        id: releasecheck
        uses: "insightsengineering/release-existence-action@v1.0.0"
        with:
          release-tag: "v${{steps.vsapi.output.VS_VERSION}}"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        if: steps.releasecheck.outputs.release-exists == false
        with:
          images: |
            ${{ github.repository_owner }}/vintagestory-server
          tags: |
            type=raw,pattern={{steps.vsapi.output.VS_VERSION}}
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/') }}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  docker-hub-description:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Docker Hub Description
        uses: peter-evans/dockerhub-description@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ secrets.DOCKERHUB_USERNAME }}/vintagestory-server
          readme-filepath: ./readme.md
          short-description: Vintage Story Server Docker Image
